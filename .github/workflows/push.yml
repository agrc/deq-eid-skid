name: Push Events

on:
  push:
    branches:
      - main
      - dev

permissions:
  contents: write
  id-token: write
  deployments: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  CLOUD_FUNCTION_MEMORY: 512Mb
  CLOUD_FUCNTION_RUN_TIMEOUT: 240s
  SCHEDULE_NAME: monday-morning
  SCHEDULE_CRON: 0 5 * * * # daily at 11 PM MDT
  SCHEDULE_DESCRIPTION: "Trigger the deq_eid-skid bot every day at 11 PM MDT"

jobs:
  release-please:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}

    steps:
      - name: üöÄ Create Release
        id: release-please
        uses: agrc/release-composite-action@v1
        with:
          prerelease: ${{ github.ref_name == 'dev' }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          github-app-id: ${{ secrets.UGRC_RELEASE_BOT_APP_ID }}
          github-app-key: ${{ secrets.UGRC_RELEASE_BOT_APP_KEY }}
          github-app-name: ${{ secrets.UGRC_RELEASE_BOT_NAME }}
          github-app-email: ${{ secrets.UGRC_RELEASE_BOT_EMAIL }}
          release-type: python
          extra-files: src/deq_eid/version.py

  deploy-dev:
    name: Deploy to GCF
    needs: release-please
    runs-on: ubuntu-latest
    if: github.ref_name == 'dev' && needs.release-please.outputs.release_created
    environment:
      name: dev
    permissions:
      id-token: write
      contents: read

    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v4

      - name: üóùÔ∏è Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: üöÄ Deploy to Cloud Function
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@v3
        timeout-minutes: 10
        with:
          name: projectname-skid
          runtime: python311
          entry_point: main
          source_dir: src/deq_eid
          service_account: cloud-function-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
          event_trigger_type: providers/cloud.pubsub/eventTypes/topic.publish
          event_trigger_pubsub_topic: projects/${{ secrets.PROJECT_ID }}/topics/${{ env.SCHEDULE_NAME }}-topic
          memory: ${{ env.CLOUD_FUNCTION_MEMORY }}
          service_timeout: ${{ env.CLOUD_FUCNTION_RUN_TIMEOUT }}
          environment_variables: STORAGE_BUCKET=${{secrets.STORAGE_BUCKET}}
          secrets: |
            /secrets/app/secrets.json=${{secrets.PROJECT_ID}}/app_secrets

      - name: üì• Create PubSub topic
        run: |
          if [ ! "$(gcloud pubsub topics list | grep $SCHEDULE_NAME-topic)" ]; then
            gcloud pubsub topics create $SCHEDULE_NAME-topic --quiet
          fi

      - name: üï∞Ô∏è Create Cloud Scheduler
        run: |
          if [ ! "$(gcloud scheduler jobs list --location=us-central1 | grep $SCHEDULE_NAME)" ]; then
            gcloud scheduler jobs create pubsub $SCHEDULE_NAME \
              --description="$SCHEDULE_DESCRIPTION" \
              --schedule="$SCHEDULE_CRON" \
              --time-zone=America/Denver \
              --location=us-central1 \
              --topic=$SCHEDULE_NAME-topic \
              --message-body='{"run": "now"}' \
              --quiet
          else
            gcloud scheduler jobs update pubsub $SCHEDULE_NAME \
              --description="$SCHEDULE_DESCRIPTION" \
              --schedule="$SCHEDULE_CRON" \
              --time-zone=America/Denver \
              --location=us-central1 \
              --topic=$SCHEDULE_NAME-topic \
              --message-body='{"run": "now"}' \
              --quiet
          fi

  deploy-prod:
    name: Deploy to GCF
    needs: release-please
    runs-on: ubuntu-latest
    if: github.ref_name == 'prod' && needs.release-please.outputs.release_created
    environment:
      name: prod
    permissions:
      id-token: write
      contents: read

    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v4

      - name: üóùÔ∏è Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: üöÄ Deploy to Cloud Function
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@v3
        timeout-minutes: 10
        with:
          name: projectname-skid
          runtime: python311
          entry_point: main
          source_dir: src/projectname
          service_account: cloud-function-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
          event_trigger_type: providers/cloud.pubsub/eventTypes/topic.publish
          event_trigger_pubsub_topic: projects/${{ secrets.PROJECT_ID }}/topics/${{ env.SCHEDULE_NAME }}-topic
          memory: ${{ env.CLOUD_FUNCTION_MEMORY }}
          service_timeout: ${{ env.CLOUD_FUCNTION_RUN_TIMEOUT }}
          environment_variables: STORAGE_BUCKET=${{secrets.STORAGE_BUCKET}}
          secrets: |
            /secrets/app/secrets.json=${{secrets.PROJECT_ID}}/app_secrets
            /secrets/ftp/known_hosts=${{secrets.PROJECT_ID}}/known_hosts

      - name: üì• Create PubSub topic
        run: |
          if [ ! "$(gcloud pubsub topics list | grep $SCHEDULE_NAME-topic)" ]; then
            gcloud pubsub topics create $SCHEDULE_NAME-topic --quiet
          fi

      - name: üï∞Ô∏è Create Cloud Scheduler
        run: |
          if [ ! "$(gcloud scheduler jobs list --location=us-central1 | grep $SCHEDULE_NAME)" ]; then
            gcloud scheduler jobs create pubsub $SCHEDULE_NAME \
              --description="$SCHEDULE_DESCRIPTION" \
              --schedule="$SCHEDULE_CRON" \
              --time-zone=America/Denver \
              --location=us-central1 \
              --topic=$SCHEDULE_NAME-topic \
              --message-body='{"run": "now"}' \
              --quiet
          else
            gcloud scheduler jobs update pubsub $SCHEDULE_NAME \
              --description="$SCHEDULE_DESCRIPTION" \
              --schedule="$SCHEDULE_CRON" \
              --time-zone=America/Denver \
              --location=us-central1 \
              --topic=$SCHEDULE_NAME-topic \
              --message-body='{"run": "now"}' \
              --quiet
          fi
